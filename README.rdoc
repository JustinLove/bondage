= bondage

* http://computergeneratedreams.com/

== DESCRIPTION:

class Binding stinks.  module Bondage stinks less.

== FEATURES/PROBLEMS:

* Allows access to binding variables without use of eval.
* Provides enumerators for visible variables.
* Warning: Uses eval internally, so don't use it with untrusted data.  An attempt is made to sanitize symbol names.  However, if your implementation doesn't support ObjectSpace, the second argument to []= is still evaled directly.

== SYNOPSIS:

  b = binding.extend(Bondage)
  
  # return variable hashes
  b.locals[:b]
  b.globals.each {|var, value| ... }
  
  # set and retrieve
  b[:x] = ["one", "two", "three"]
  b[:$LOAD_PATH]
  b[:@pizza]
  
  # supports Enumerable over locals
  b.find {|var, value| ... }
  
  # Or if you're feeling really kinky
  class Binding
    include Bondage
  end

== REQUIREMENTS:

Tested under Ruby 1.8.7.

== INSTALL:

sudo gem install bondage

== LICENSE:

(The MIT License)

Copyright (c) 2009 Justin Love

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.